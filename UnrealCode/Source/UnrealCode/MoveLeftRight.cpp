// Fill out your copyright notice in the Description page of Project Settings.


#include "MoveLeftRight.h"
#include "Public/Tools/interface_play_obj.h"
#include "switch.h"//switch정보 include

// Sets default values
AMoveLeftRight::AMoveLeftRight() :m_LocX(0), m_ismoveright(1), m_isplay(false)
{
	// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.
	PrimaryActorTick.bCanEverTick = true;

	//CreateDefaultSubobject : new 키워드와 같이 언리얼에서 동적으로 객체를 생성하는 키워드
	//TEXT : 언리얼에서 사용하는 문자형 중에 하나
	//<USceneComponent>(TEXT("SceneRootRoot")); // USceneComponent 객체를 "SceneRootRoot"이름으로 동적으로 생성
	Scene = CreateDefaultSubobject<USceneComponent>(TEXT("SceneRootRoot"));
	//UStaticMeshComponent 객체를 "mymyMesh" 이름으로 동적으로 생성
	StaticMesh = CreateDefaultSubobject<UStaticMeshComponent>(TEXT("mymyMesh"));

	SetRootComponent(Scene);//Scene을 RootComponent로 올리겠다.
	//RootComponent = Scene;//Scene을 RootComponent로 올리겠다.

	//AttachToComponent : Component 붙이기 기능
	//Scene에 붙인다, 현재 좌표값을 Scene 기준에 Relative(상대) 좌표계로
	StaticMesh->AttachToComponent(Scene, FAttachmentTransformRules::KeepRelativeTransform);

	//RootComponent에 붙인다, 현재 좌표값을 RootComponent 기준에 Relative(상대) 좌표계로
	//StaticMesh->AttachToComponent(RootComponent, FAttachmentTransformRules::KeepRelativeTransform);

	//UAsset 가져오기
	//ConstructorHelpers::FObjectFinder : 오브젝트 에셋을 찾는다.
	//<UStaticMesh> : 찾을 에셋 타입
	//sm 찾아서 넣을 객체이름 
	//static ConstructorHelpers::FObjectFinder<UStaticMesh> sm(TEXT("/Script/Engine.StaticMesh'/Game/StarterContent/Props/SM_Chair.SM_Chair'"));

	//if (sm.Succeeded())// 에셋 불러오기 성공 여부 체크
	//{
	//	StaticMesh->SetStaticMesh(sm.Object);//StaticMeshComponent에 StaticMesh 적용
	//}



}

AMoveLeftRight::~AMoveLeftRight()
{
}

// Called when the game starts or when spawned
void AMoveLeftRight::BeginPlay()
{
	Super::BeginPlay();

	if (IsValid(m_Switch))//m_Switch가 정상적이라면 밑에코드를 실행한다.
		m_Switch->FDele_EventOverlap.AddDynamic(this, &AMoveLeftRight::EventOverlap);
	    //m_Switch를 FDele_EventOverlap에 바인딩하겠다.

}

// Called every frame
void AMoveLeftRight::Tick(float DeltaTime)
{
	Super::Tick(DeltaTime);//오버라이드한 함수인 경우 부모함수를 실행한다

	if (m_isplay == false)
		return;
			
	//ismoveright; //움직일방향
	//LocX += 1;//오른쪽
	//SetRelativeLocation : 상대적인 위치값을 설정한다
	//FVector : 언리얼에서 사용하는 3차원 좌표 변수
		
	if (m_ismoveright)
	{
		m_LocX += 2.0f;
		StaticMesh->SetRelativeLocation(FVector(m_LocX, 0, 0));
		if (m_LocX >= 300)
		{
			m_ismoveright = false;
		}
	}
	else
	{
		m_LocX -= 2.0f;
		StaticMesh->SetRelativeLocation(FVector(m_LocX, 0, 0));
		if (m_LocX <= 0)
		{
			m_ismoveright = true;
		}
	}
		
}

void AMoveLeftRight::EventOverlap(bool IsBegin)//AMoveLeftRight와 EventOverlap가 연결된//bool IsBegin : 파라메타
{
	m_isplay = IsBegin; //m_isplay에IsBegin의 값을 넣어준다.
}

void AMoveLeftRight::Code_DoPlay_Implementation(bool isplay)
{
	m_isplay = isplay;
}

